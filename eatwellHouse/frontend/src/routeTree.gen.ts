/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LocationImport } from './routes/location'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as AdminDashboardIndexImport } from './routes/admin-dashboard/index'
import { Route as DashboardOrdersImport } from './routes/dashboard/orders'
import { Route as DashboardAccountImport } from './routes/dashboard/account'
import { Route as AdminDashboardCategoryImport } from './routes/admin-dashboard/category'

// Create/Update Routes

const LocationRoute = LocationImport.update({
  id: '/location',
  path: '/location',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardIndexRoute = AdminDashboardIndexImport.update({
  id: '/admin-dashboard/',
  path: '/admin-dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardOrdersRoute = DashboardOrdersImport.update({
  id: '/dashboard/orders',
  path: '/dashboard/orders',
  getParentRoute: () => rootRoute,
} as any)

const DashboardAccountRoute = DashboardAccountImport.update({
  id: '/dashboard/account',
  path: '/dashboard/account',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardCategoryRoute = AdminDashboardCategoryImport.update({
  id: '/admin-dashboard/category',
  path: '/admin-dashboard/category',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/location': {
      id: '/location'
      path: '/location'
      fullPath: '/location'
      preLoaderRoute: typeof LocationImport
      parentRoute: typeof rootRoute
    }
    '/admin-dashboard/category': {
      id: '/admin-dashboard/category'
      path: '/admin-dashboard/category'
      fullPath: '/admin-dashboard/category'
      preLoaderRoute: typeof AdminDashboardCategoryImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/account': {
      id: '/dashboard/account'
      path: '/dashboard/account'
      fullPath: '/dashboard/account'
      preLoaderRoute: typeof DashboardAccountImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/orders': {
      id: '/dashboard/orders'
      path: '/dashboard/orders'
      fullPath: '/dashboard/orders'
      preLoaderRoute: typeof DashboardOrdersImport
      parentRoute: typeof rootRoute
    }
    '/admin-dashboard/': {
      id: '/admin-dashboard/'
      path: '/admin-dashboard'
      fullPath: '/admin-dashboard'
      preLoaderRoute: typeof AdminDashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/location': typeof LocationRoute
  '/admin-dashboard/category': typeof AdminDashboardCategoryRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/orders': typeof DashboardOrdersRoute
  '/admin-dashboard': typeof AdminDashboardIndexRoute
  '/dashboard': typeof DashboardIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/location': typeof LocationRoute
  '/admin-dashboard/category': typeof AdminDashboardCategoryRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/orders': typeof DashboardOrdersRoute
  '/admin-dashboard': typeof AdminDashboardIndexRoute
  '/dashboard': typeof DashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/location': typeof LocationRoute
  '/admin-dashboard/category': typeof AdminDashboardCategoryRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/orders': typeof DashboardOrdersRoute
  '/admin-dashboard/': typeof AdminDashboardIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/location'
    | '/admin-dashboard/category'
    | '/dashboard/account'
    | '/dashboard/orders'
    | '/admin-dashboard'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/location'
    | '/admin-dashboard/category'
    | '/dashboard/account'
    | '/dashboard/orders'
    | '/admin-dashboard'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/location'
    | '/admin-dashboard/category'
    | '/dashboard/account'
    | '/dashboard/orders'
    | '/admin-dashboard/'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LocationRoute: typeof LocationRoute
  AdminDashboardCategoryRoute: typeof AdminDashboardCategoryRoute
  DashboardAccountRoute: typeof DashboardAccountRoute
  DashboardOrdersRoute: typeof DashboardOrdersRoute
  AdminDashboardIndexRoute: typeof AdminDashboardIndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LocationRoute: LocationRoute,
  AdminDashboardCategoryRoute: AdminDashboardCategoryRoute,
  DashboardAccountRoute: DashboardAccountRoute,
  DashboardOrdersRoute: DashboardOrdersRoute,
  AdminDashboardIndexRoute: AdminDashboardIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/location",
        "/admin-dashboard/category",
        "/dashboard/account",
        "/dashboard/orders",
        "/admin-dashboard/",
        "/dashboard/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/location": {
      "filePath": "location.tsx"
    },
    "/admin-dashboard/category": {
      "filePath": "admin-dashboard/category.tsx"
    },
    "/dashboard/account": {
      "filePath": "dashboard/account.tsx"
    },
    "/dashboard/orders": {
      "filePath": "dashboard/orders.tsx"
    },
    "/admin-dashboard/": {
      "filePath": "admin-dashboard/index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
