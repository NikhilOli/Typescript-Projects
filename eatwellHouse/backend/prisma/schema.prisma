// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  name String
  phone String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model Meta {
  id      Int      @id @default(autoincrement())
  meta_data MetaType
}

enum MetaType {
  Contact
  Address
  Shop_Name
  Business_Hours
  Social_media
  About
  Privacy_Policy
  Terms_And_Conditions
}

model Category {
  id Int @id @default(autoincrement())
  name String
  thumbnail Media? 
  foods Food[]
  createdAt DateTime @default(now())
}

model Food {
  id Int @id @default(autoincrement())
  name String
  hasSpicyness Boolean @default(false)
  price Float
  quantity Int @default(0)
  isAvailable Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  image Media?
}

enum MediaType {
  CATEGORY_IMAGE
  FOOD_IMAGE
}
model Media {
  id Int @id @default(autoincrement())
  name String
  mediaType MediaType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  food Food? @relation(fields: [foodId], references: [id])
  foodId Int? @unique
  category Category? @relation(fields: [categoryId], references: [id])
  categoryId Int? @unique
}
